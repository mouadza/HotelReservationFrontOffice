@model Room
@section Title {
    Book Room
}
<div class="w-full mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Book Room</h1>
    <div class="flex flex-wrap w-full">
        <div class="flex-1 w-full pr-4">
            <div class="bg-white shadow-lg rounded-lg overflow-hidden h-full flex flex-col justify-center">
                <div class="relative">
                    <div class="room-slider" style="height: 500px; max-height: 100%;">
                        <div class="h-full">
                            <img src="~/images/room1.jpg" class="w-full h-full object-cover" />
                            <img src="~/images/room2.jpg" class="w-full h-full object-cover hidden" />
                        </div>
                    </div>
                    <button class="prev-btn absolute left-2 top-1/2 transform -translate-y-1/2 text-3xl shadow-lg rounded-full p-3 transition">
                        <ion-icon name="chevron-back-circle-outline"></ion-icon>
                    </button>
                    <button class="next-btn absolute right-2 top-1/2 transform -translate-y-1/2 text-3xl shadow-lg rounded-full p-3 transition">
                        <ion-icon name="chevron-forward-circle-outline"></ion-icon>
                    </button>
                </div>
            </div>
        </div>
        <div class="flex-1 w-full">
            <div class="bg-white shadow-lg rounded-lg p-6 h-full flex flex-col justify-between">
                <div>
                    <div class="text-right right-9 m-4 ">
                        <label class="block text-gray-700 font-bold mb-2 text-xl">
                            Total
                            <p id="total" class="bg-gray-100 w-100 p-2 rounded text-gray-700  inline-block">.....</p>
                        </label>
                    </div>
                    <h2 class="font-bold text-xl text-gray-800 mb-4">Room Number: @Model.Numero</h2>
                    <p class="text-gray-600 mb-2">Room Type: @Model.RoomTypeName</p>
                    <p class="text-gray-600 mb-2">Status: @Model.Status</p>
                    <p class="text-gold font-bold mb-4">Price: @Model.Prix$ / Night</p>
                </div>
                <form id="reservationForm" method="post" action="/Home/SubmitReservation" class="mt-4">

                    <input type="hidden" name="roomId" value="@Model.Id" />
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="checkin">Check-in Date</label>
                        <input type="date" id="checkin" name="checkin" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                    </div>
                    <div class="mb-4"> 
                        <label class="block text-gray-700 text-sm font-bold mb-2" for="checkout">Check-out Date</label>
                        <input type="date" id="checkout" name="checkout" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"> 
                    </div> 
                    <button type="submit" class="bg-deepBlue text-white font-bold py-2 px-4 rounded hover:contrast-75 w-full">Submit Reservation</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="popup" class="hidden fixed inset-0 t-0 top-0 flex items-center justify-center bg-black bg-opacity-60">
    <div class="bg-white p-8 rounded-xl shadow-2xl max-w-lg w-full text-center transform scale-105 transition-transform">
        <h2 id="popupTitle" class="text-2xl font-semibold text-deepBlue mb-4">Notification</h2>
        <p id="popupMessage" class="text-gray-600 text-lg mb-6">
        </p>
        <button id="popupButton" class="bg-deepBlue text-white py-3 px-6 rounded-lg hover:bg-opacity-90 focus:outline-none focus:ring-4 focus:ring-deepBlue focus:ring-opacity-50">
            OK
        </button>
    </div>
</div>

<script src="/js/site.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const checkin = document.getElementById('checkin');
        const checkout = document.getElementById('checkout');
        const total = document.getElementById('total');
        const pricePerNight = @Model.Prix;

        function calculateTotal() {
            const checkinDate = new Date(checkin.value);
            const checkoutDate = new Date(checkout.value);

            if (checkinDate && checkoutDate && checkinDate < checkoutDate) {
                const diffTime = Math.abs(checkoutDate - checkinDate);
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                total.textContent = `$${diffDays * pricePerNight}`;
            } else {
                total.textContent = '.....';
            }
        }


        checkout.addEventListener('change', calculateTotal);
    });
    document.querySelectorAll('.room-slider').forEach(slider => {
        const images = slider.querySelectorAll('img');
        let currentIndex = 0;

        function showImage(index) {
            images.forEach((img, i) => {
                img.classList.toggle('hidden', i !== index);
            });
        }

        slider.closest('.relative').querySelector('.prev-btn').addEventListener('click', () => {
            currentIndex = (currentIndex - 1 + images.length) % images.length;
            showImage(currentIndex);
        });

        slider.closest('.relative').querySelector('.next-btn').addEventListener('click', () => {
            currentIndex = (currentIndex + 1) % images.length;
            showImage(currentIndex);
        });

        showImage(currentIndex);
    });
</script>
